# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pyCRLD',
                'doc_host': 'https://wbarfuss.github.io',
                'git_url': 'https://github.com/wbarfuss/pyCRLD',
                'lib_path': 'pyCRLD'},
  'syms': { 'pyCRLD.Agents.Base': { 'pyCRLD.Agents.Base.abase': ('Agents/abase.html#abase', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Ps': ('Agents/abase.html#abase.ps', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Qisa': ('Agents/abase.html#abase.qisa', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Ri': ('Agents/abase.html#abase.ri', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Ris': ('Agents/abase.html#abase.ris', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Risa': ('Agents/abase.html#abase.risa', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Tisas': ('Agents/abase.html#abase.tisas', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Tss': ('Agents/abase.html#abase.tss', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.Vis': ('Agents/abase.html#abase.vis', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase._OtherAgentsActionsSummationTensor': ( 'Agents/abase.html#abase._otheragentsactionssummationtensor',
                                                                                                     'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.__init__': ('Agents/abase.html#abase.__init__', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase._jaxPs': ('Agents/abase.html#abase._jaxps', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase._numpyPs': ('Agents/abase.html#abase._numpyps', 'pyCRLD/Agents/Base.py'),
                                    'pyCRLD.Agents.Base.abase.trajectory': ('Agents/abase.html#abase.trajectory', 'pyCRLD/Agents/Base.py')},
            'pyCRLD.Agents.POBase': { 'pyCRLD.Agents.POBase.aPObase': ('Agents/apobase.html#apobase', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Bios': ('Agents/apobase.html#apobase.bios', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Qioa': ('Agents/apobase.html#apobase.qioa', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Qisa': ('Agents/apobase.html#apobase.qisa', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Ri': ('Agents/apobase.html#apobase.ri', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Rio': ('Agents/apobase.html#apobase.rio', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Rioa': ('Agents/apobase.html#apobase.rioa', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Ris': ('Agents/apobase.html#apobase.ris', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Risa': ('Agents/apobase.html#apobase.risa', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Tioao': ( 'Agents/apobase.html#apobase.tioao',
                                                                              'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Tioo': ('Agents/apobase.html#apobase.tioo', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Tisas': ( 'Agents/apobase.html#apobase.tisas',
                                                                              'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Tss': ('Agents/apobase.html#apobase.tss', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Vio': ('Agents/apobase.html#apobase.vio', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Vis': ('Agents/apobase.html#apobase.vis', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.Xisa': ('Agents/apobase.html#apobase.xisa', 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.__init__': ( 'Agents/apobase.html#apobase.__init__',
                                                                                 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase._bios': ( 'Agents/apobase.html#apobase._bios',
                                                                              'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase._jobsdist': ( 'Agents/apobase.html#apobase._jobsdist',
                                                                                  'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase._obsdist': ( 'Agents/apobase.html#apobase._obsdist',
                                                                                 'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.fast_Bios': ( 'Agents/apobase.html#apobase.fast_bios',
                                                                                  'pyCRLD/Agents/POBase.py'),
                                      'pyCRLD.Agents.POBase.aPObase.obsdist': ( 'Agents/apobase.html#apobase.obsdist',
                                                                                'pyCRLD/Agents/POBase.py')},
            'pyCRLD.Agents.POStrategyActorCritic': { 'pyCRLD.Agents.POStrategyActorCritic.POstratAC': ( 'Agents/apostrategyactorcritic.html#postratac',
                                                                                                        'pyCRLD/Agents/POStrategyActorCritic.py'),
                                                     'pyCRLD.Agents.POStrategyActorCritic.POstratAC.NextVioa': ( 'Agents/apostrategyactorcritic.html#postratac.nextvioa',
                                                                                                                 'pyCRLD/Agents/POStrategyActorCritic.py'),
                                                     'pyCRLD.Agents.POStrategyActorCritic.POstratAC.RPEioa': ( 'Agents/apostrategyactorcritic.html#postratac.rpeioa',
                                                                                                               'pyCRLD/Agents/POStrategyActorCritic.py')},
            'pyCRLD.Agents.POStrategyBase': { 'pyCRLD.Agents.POStrategyBase.POstrategybase': ( 'Agents/apostrategybase.html#postrategybase',
                                                                                               'pyCRLD/Agents/POStrategyBase.py'),
                                              'pyCRLD.Agents.POStrategyBase.POstrategybase.__init__': ( 'Agents/apostrategybase.html#postrategybase.__init__',
                                                                                                        'pyCRLD/Agents/POStrategyBase.py'),
                                              'pyCRLD.Agents.POStrategyBase.POstrategybase.random_softmax_policy': ( 'Agents/apostrategybase.html#postrategybase.random_softmax_policy',
                                                                                                                     'pyCRLD/Agents/POStrategyBase.py'),
                                              'pyCRLD.Agents.POStrategyBase.POstrategybase.zero_intelligence_policy': ( 'Agents/apostrategybase.html#postrategybase.zero_intelligence_policy',
                                                                                                                        'pyCRLD/Agents/POStrategyBase.py')},
            'pyCRLD.Agents.StrategyActorCritic': { 'pyCRLD.Agents.StrategyActorCritic.stratAC': ( 'Agents/astrategyactorcritic.html#stratac',
                                                                                                  'pyCRLD/Agents/StrategyActorCritic.py'),
                                                   'pyCRLD.Agents.StrategyActorCritic.stratAC.NextVisa': ( 'Agents/astrategyactorcritic.html#stratac.nextvisa',
                                                                                                           'pyCRLD/Agents/StrategyActorCritic.py'),
                                                   'pyCRLD.Agents.StrategyActorCritic.stratAC.RPEisa': ( 'Agents/astrategyactorcritic.html#stratac.rpeisa',
                                                                                                         'pyCRLD/Agents/StrategyActorCritic.py')},
            'pyCRLD.Agents.StrategyBase': { 'pyCRLD.Agents.StrategyBase.strategybase': ( 'Agents/astrategybase.html#strategybase',
                                                                                         'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.__init__': ( 'Agents/astrategybase.html#strategybase.__init__',
                                                                                                  'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.id': ( 'Agents/astrategybase.html#strategybase.id',
                                                                                            'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.random_softmax_strategy': ( 'Agents/astrategybase.html#strategybase.random_softmax_strategy',
                                                                                                                 'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.reverse_step': ( 'Agents/astrategybase.html#strategybase.reverse_step',
                                                                                                      'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.step': ( 'Agents/astrategybase.html#strategybase.step',
                                                                                              'pyCRLD/Agents/StrategyBase.py'),
                                            'pyCRLD.Agents.StrategyBase.strategybase.zero_intelligence_strategy': ( 'Agents/astrategybase.html#strategybase.zero_intelligence_strategy',
                                                                                                                    'pyCRLD/Agents/StrategyBase.py')},
            'pyCRLD.Agents.StrategySARSA': { 'pyCRLD.Agents.StrategySARSA.stratSARSA': ( 'Agents/astrategysarsa.html#stratsarsa',
                                                                                         'pyCRLD/Agents/StrategySARSA.py'),
                                             'pyCRLD.Agents.StrategySARSA.stratSARSA.NextQisa': ( 'Agents/astrategysarsa.html#stratsarsa.nextqisa',
                                                                                                  'pyCRLD/Agents/StrategySARSA.py'),
                                             'pyCRLD.Agents.StrategySARSA.stratSARSA.RPEisa': ( 'Agents/astrategysarsa.html#stratsarsa.rpeisa',
                                                                                                'pyCRLD/Agents/StrategySARSA.py')},
            'pyCRLD.Agents.ValueBase': { 'pyCRLD.Agents.ValueBase.action_probabilities': ( 'Agents/avaluebase.html#action_probabilities',
                                                                                           'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.id': ('Agents/avaluebase.html#id', 'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.multiagent_epsilongreedy_strategy': ( 'Agents/avaluebase.html#multiagent_epsilongreedy_strategy',
                                                                                                        'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.multiagent_epsilongreedy_strategy.__init__': ( 'Agents/avaluebase.html#multiagent_epsilongreedy_strategy.__init__',
                                                                                                                 'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.multiagent_epsilongreedy_strategy.id': ( 'Agents/avaluebase.html#multiagent_epsilongreedy_strategy.id',
                                                                                                           'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.step': ('Agents/avaluebase.html#step', 'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.valuebase': ( 'Agents/avaluebase.html#valuebase',
                                                                                'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.valuebase.__init__': ( 'Agents/avaluebase.html#valuebase.__init__',
                                                                                         'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.valuebase.random_values': ( 'Agents/avaluebase.html#valuebase.random_values',
                                                                                              'pyCRLD/Agents/ValueBase.py'),
                                         'pyCRLD.Agents.ValueBase.valuebase.zero_intelligence_values': ( 'Agents/avaluebase.html#valuebase.zero_intelligence_values',
                                                                                                         'pyCRLD/Agents/ValueBase.py')},
            'pyCRLD.Agents.ValueSARSA': { 'pyCRLD.Agents.ValueSARSA.RPEisa': ( 'Agents/avaluesarsa.html#rpeisa',
                                                                               'pyCRLD/Agents/ValueSARSA.py'),
                                          'pyCRLD.Agents.ValueSARSA.valNextQisa': ( 'Agents/avaluesarsa.html#valnextqisa',
                                                                                    'pyCRLD/Agents/ValueSARSA.py'),
                                          'pyCRLD.Agents.ValueSARSA.valRisa': ( 'Agents/avaluesarsa.html#valrisa',
                                                                                'pyCRLD/Agents/ValueSARSA.py'),
                                          'pyCRLD.Agents.ValueSARSA.valSARSA': ( 'Agents/avaluesarsa.html#valsarsa',
                                                                                 'pyCRLD/Agents/ValueSARSA.py')},
            'pyCRLD.Environments.Base': { 'pyCRLD.Environments.Base.ebase': ( 'Environments/envbase.html#ebase',
                                                                              'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.FinalStates': ( 'Environments/envbase.html#ebase.finalstates',
                                                                                          'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.ObservationTensor': ( 'Environments/envbase.html#ebase.observationtensor',
                                                                                                'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.RewardTensor': ( 'Environments/envbase.html#ebase.rewardtensor',
                                                                                           'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.TransitionTensor': ( 'Environments/envbase.html#ebase.transitiontensor',
                                                                                               'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.__init__': ( 'Environments/envbase.html#ebase.__init__',
                                                                                       'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.__repr__': ( 'Environments/envbase.html#ebase.__repr__',
                                                                                       'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.__str__': ( 'Environments/envbase.html#ebase.__str__',
                                                                                      'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.actions': ( 'Environments/envbase.html#ebase.actions',
                                                                                      'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.id': ( 'Environments/envbase.html#ebase.id',
                                                                                 'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.observation': ( 'Environments/envbase.html#ebase.observation',
                                                                                          'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.observations': ( 'Environments/envbase.html#ebase.observations',
                                                                                           'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.states': ( 'Environments/envbase.html#ebase.states',
                                                                                     'pyCRLD/Environments/Base.py'),
                                          'pyCRLD.Environments.Base.ebase.step': ( 'Environments/envbase.html#ebase.step',
                                                                                   'pyCRLD/Environments/Base.py')},
            'pyCRLD.Environments.EcologicalPublicGood': { 'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood',
                                                                                                                             'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.RewardTensor': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.rewardtensor',
                                                                                                                                          'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.TransitionTensor': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.transitiontensor',
                                                                                                                                              'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.__init__': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.__init__',
                                                                                                                                      'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood._reward': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood._reward',
                                                                                                                                     'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood._transition_probability': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood._transition_probability',
                                                                                                                                                     'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.actions': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.actions',
                                                                                                                                     'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.id': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.id',
                                                                                                                                'pyCRLD/Environments/EcologicalPublicGood.py'),
                                                          'pyCRLD.Environments.EcologicalPublicGood.EcologicalPublicGood.states': ( 'Environments/envecologicalpublicgood.html#ecologicalpublicgood.states',
                                                                                                                                    'pyCRLD/Environments/EcologicalPublicGood.py')},
            'pyCRLD.Environments.HistoryEmbedding': { 'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded': ( 'Environments/envhistoryembedding.html#historyembedded',
                                                                                                                'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.ObservationTensor': ( 'Environments/envhistoryembedding.html#historyembedded.observationtensor',
                                                                                                                                  'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.RewardTensor': ( 'Environments/envhistoryembedding.html#historyembedded.rewardtensor',
                                                                                                                             'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.TransitionTensor': ( 'Environments/envhistoryembedding.html#historyembedded.transitiontensor',
                                                                                                                                 'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.__init__': ( 'Environments/envhistoryembedding.html#historyembedded.__init__',
                                                                                                                         'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.actions': ( 'Environments/envhistoryembedding.html#historyembedded.actions',
                                                                                                                        'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.id': ( 'Environments/envhistoryembedding.html#historyembedded.id',
                                                                                                                   'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.observations': ( 'Environments/envhistoryembedding.html#historyembedded.observations',
                                                                                                                             'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.HistoryEmbedded.states': ( 'Environments/envhistoryembedding.html#historyembedded.states',
                                                                                                                       'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.ObsActHistsIx': ( 'Environments/envhistoryembedding.html#obsacthistsix',
                                                                                                              'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.StateActHistsIx': ( 'Environments/envhistoryembedding.html#stateacthistsix',
                                                                                                                'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding._get_all_histories': ( 'Environments/envhistoryembedding.html#_get_all_histories',
                                                                                                                   'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding._hist_contains_NotPossibleTrans': ( 'Environments/envhistoryembedding.html#_hist_contains_notpossibletrans',
                                                                                                                                'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding._transition_ix': ( 'Environments/envhistoryembedding.html#_transition_ix',
                                                                                                               'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.hOset': ( 'Environments/envhistoryembedding.html#hoset',
                                                                                                      'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.hSset': ( 'Environments/envhistoryembedding.html#hsset',
                                                                                                      'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.histSjA_ObservationTensor': ( 'Environments/envhistoryembedding.html#histsja_observationtensor',
                                                                                                                          'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.histSjA_RewardTensor': ( 'Environments/envhistoryembedding.html#histsja_rewardtensor',
                                                                                                                     'pyCRLD/Environments/HistoryEmbedding.py'),
                                                      'pyCRLD.Environments.HistoryEmbedding.histSjA_TransitionTensor': ( 'Environments/envhistoryembedding.html#histsja_transitiontensor',
                                                                                                                         'pyCRLD/Environments/HistoryEmbedding.py')},
            'pyCRLD.Environments.RenewableRessources': { 'pyCRLD.Environments.RenewableRessources.RenewableRessources': ( 'Environments/envrenewableressources.html#renewableressources',
                                                                                                                          'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.ObservationTensor': ( 'Environments/envrenewableressources.html#renewableressources.observationtensor',
                                                                                                                                            'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.RewardTensor': ( 'Environments/envrenewableressources.html#renewableressources.rewardtensor',
                                                                                                                                       'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.TransitionTensor': ( 'Environments/envrenewableressources.html#renewableressources.transitiontensor',
                                                                                                                                           'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.__init__': ( 'Environments/envrenewableressources.html#renewableressources.__init__',
                                                                                                                                   'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._action_values': ( 'Environments/envrenewableressources.html#renewableressources._action_values',
                                                                                                                                         'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._growth': ( 'Environments/envrenewableressources.html#renewableressources._growth',
                                                                                                                                  'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._growth_dict': ( 'Environments/envrenewableressources.html#renewableressources._growth_dict',
                                                                                                                                       'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._recoverP': ( 'Environments/envrenewableressources.html#renewableressources._recoverp',
                                                                                                                                    'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._reward': ( 'Environments/envrenewableressources.html#renewableressources._reward',
                                                                                                                                  'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources._transition_probability': ( 'Environments/envrenewableressources.html#renewableressources._transition_probability',
                                                                                                                                                  'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.actions': ( 'Environments/envrenewableressources.html#renewableressources.actions',
                                                                                                                                  'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.id': ( 'Environments/envrenewableressources.html#renewableressources.id',
                                                                                                                             'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.obs_action_space': ( 'Environments/envrenewableressources.html#renewableressources.obs_action_space',
                                                                                                                                           'pyCRLD/Environments/RenewableRessources.py'),
                                                         'pyCRLD.Environments.RenewableRessources.RenewableRessources.states': ( 'Environments/envrenewableressources.html#renewableressources.states',
                                                                                                                                 'pyCRLD/Environments/RenewableRessources.py')},
            'pyCRLD.Environments.RiskReward': { 'pyCRLD.Environments.RiskReward.RiskReward': ( 'Environments/envriskreward.html#riskreward',
                                                                                               'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.RewardTensor': ( 'Environments/envriskreward.html#riskreward.rewardtensor',
                                                                                                            'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.TransitionTensor': ( 'Environments/envriskreward.html#riskreward.transitiontensor',
                                                                                                                'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.__init__': ( 'Environments/envriskreward.html#riskreward.__init__',
                                                                                                        'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.actions': ( 'Environments/envriskreward.html#riskreward.actions',
                                                                                                       'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.id': ( 'Environments/envriskreward.html#riskreward.id',
                                                                                                  'pyCRLD/Environments/RiskReward.py'),
                                                'pyCRLD.Environments.RiskReward.RiskReward.states': ( 'Environments/envriskreward.html#riskreward.states',
                                                                                                      'pyCRLD/Environments/RiskReward.py')},
            'pyCRLD.Environments.SocialDilemma': { 'pyCRLD.Environments.SocialDilemma.SocialDilemma': ( 'Environments/envsocialdilemma.html#socialdilemma',
                                                                                                        'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.RewardTensor': ( 'Environments/envsocialdilemma.html#socialdilemma.rewardtensor',
                                                                                                                     'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.TransitionTensor': ( 'Environments/envsocialdilemma.html#socialdilemma.transitiontensor',
                                                                                                                         'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.__init__': ( 'Environments/envsocialdilemma.html#socialdilemma.__init__',
                                                                                                                 'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.actions': ( 'Environments/envsocialdilemma.html#socialdilemma.actions',
                                                                                                                'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.id': ( 'Environments/envsocialdilemma.html#socialdilemma.id',
                                                                                                           'pyCRLD/Environments/SocialDilemma.py'),
                                                   'pyCRLD.Environments.SocialDilemma.SocialDilemma.states': ( 'Environments/envsocialdilemma.html#socialdilemma.states',
                                                                                                               'pyCRLD/Environments/SocialDilemma.py')},
            'pyCRLD.Environments.UncertainSocialDilemma': { 'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma',
                                                                                                                                   'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.ObservationTensor': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.observationtensor',
                                                                                                                                                     'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.RewardTensor': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.rewardtensor',
                                                                                                                                                'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.TransitionTensor': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.transitiontensor',
                                                                                                                                                    'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.__init__': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.__init__',
                                                                                                                                            'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.actions': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.actions',
                                                                                                                                           'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.id': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.id',
                                                                                                                                      'pyCRLD/Environments/UncertainSocialDilemma.py'),
                                                            'pyCRLD.Environments.UncertainSocialDilemma.UncertainSocialDilemma.states': ( 'Environments/envuncertainsocialdilemma.html#uncertainsocialdilemma.states',
                                                                                                                                          'pyCRLD/Environments/UncertainSocialDilemma.py')},
            'pyCRLD.Utils.FlowPlot': { 'pyCRLD.Utils.FlowPlot._checks_and_balances': ( 'Utils/uflowplot.html#_checks_and_balances',
                                                                                       'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._dTDerror_s': ( 'Utils/uflowplot.html#_dtderror_s',
                                                                              'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._dXisa_s': ('Utils/uflowplot.html#_dxisa_s', 'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._data_to_plot': ( 'Utils/uflowplot.html#_data_to_plot',
                                                                                'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._plot': ('Utils/uflowplot.html#_plot', 'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._prepare_axes': ( 'Utils/uflowplot.html#_prepare_axes',
                                                                                'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._scale': ('Utils/uflowplot.html#_scale', 'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot._strategies': ( 'Utils/uflowplot.html#_strategies',
                                                                              'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot.plot_strategy_flow': ( 'Utils/uflowplot.html#plot_strategy_flow',
                                                                                     'pyCRLD/Utils/FlowPlot.py'),
                                       'pyCRLD.Utils.FlowPlot.plot_trajectories': ( 'Utils/uflowplot.html#plot_trajectories',
                                                                                    'pyCRLD/Utils/FlowPlot.py')},
            'pyCRLD.Utils.Helpers': { 'pyCRLD.Utils.Helpers.compute_stationarydistribution': ( 'Utils/uhelpers.html#compute_stationarydistribution',
                                                                                               'pyCRLD/Utils/Helpers.py'),
                                      'pyCRLD.Utils.Helpers.make_variable_vector': ( 'Utils/uhelpers.html#make_variable_vector',
                                                                                     'pyCRLD/Utils/Helpers.py')}}}
